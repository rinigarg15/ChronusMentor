<% modal_v3_popup "feature.connection.header.publish_connection".translate(Mentoring_Connection: _Mentoring_Connection, connection_name: @group.name) do %>
  <%= existing_groups_alert([@group.id], [], nil, :group) %>
  <% url = get_url_for_group_actions_form(@source, :publish, {id: @group.id, ga_src: ga_src}) %>
  <%= simple_form_for @group, :url => url, :remote => (@source != "profile"), :html => {:id => "bulk_groups_publish_#{@group.id}"} do |f| %>
    <%= content_tag(:p, "feature.project_request.content.critical_mass".translate(circle: _mentoring_connection)) if local_assigns[:reached_critical_mass] %>
    <%= f.input :message, as: :text, placeholder: "feature.connection.content.message".translate, input_html: {class: "form-control", :rows=>"5"}, label_html: {class: "sr-only"} %>
    <%= render_allow_to_join(@group) %>

    <%= horizontal_line(class: "m-t-xs m-b-sm") %>
    <% if current_user.is_admin? %>
      <div class="m-b-sm"><%= group_creation_email_notification_consequences_html %></div>
    <% end %>
    <% action_set(:class => "pull-right") do %>
      <%= link_to "display_string.Cancel".translate, "javascript:void(0);", :class => "btn btn-white", "data-dismiss" => "modal"%>
      <%= f.button :submit, "display_string.Publish".translate, :onclick => "ProjectRequests.gaTrackProjectPublishWithdraw(true, #{local_assigns[:reached_critical_mass] == true}, #{@source == "profile"});" %>
    <% end %>
  <% end %>
<% end %>