<% available_abstract_views = subview_optgroups.map(&:available_sub_views_for_current_program).flatten %>

<%= simple_form_for metric, url: target_path, html: {id: "cjs_report_metric_form"}, :remote => true , format: :js do |f| %>
  <%= control_group(class: "merge-bottom") do %>
    <%= controls do %>
      <%= f.input :abstract_view_id,
        collection: subview_optgroups,
        as: :grouped_select,
        group_method: :available_sub_views_for_current_program,
        group_label_method: :sub_view_display_name,
        required: true,
        label: "feature.reports.label.select_report".translate,
        include_blank: "",
        input_html: {class: "form-control light-blue-background cjs-abstract-view-chooser"}
      %>
    <% end %>
  <% end %>

  <%= f.input :title, as: :string, label: "feature.reports.label.add_customized_view".translate, input_html: {class: "form-control"}, label_html: {class: "pull-left has-above-3"} %>
  <%= f.input :description, as: :text, input_html: {class: "form-control", :rows => 5},label_html: {class: "pull-left"} %>

  <% action_set :class => "pull-right has-above-1 has-padding-right-1 merge-right has-below-2" do %>
    <%= link_to_function "display_string.Cancel".translate, "closeQtip();", :class => "btn cancel btn-white", "data-dismiss" => "modal" %>
    <%= f.button :submit, metric.new_record? ? "display_string.Add".translate : "display_string.Save".translate %>
  <% end %>
<% end %>

<%= javascript_tag do %>
  ManagementReport.validateMetricForm();
  <% available_abstract_views.each do |view| %>
    ManagementReport.availableViewDetails['<%= view.id %>'] = {
      title: '<%= j(view.title.html_safe) %>',
      description: '<%= view.description.present? ? j(view.description.gsub(/[\r\n]/, "<br />").html_safe) : "" %>'
    };
  <% end %>
  ManagementReport.updateMetricTitleDescription();
<% end %>
