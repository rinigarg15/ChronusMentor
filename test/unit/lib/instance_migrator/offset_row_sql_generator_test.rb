require_relative './../../../test_helper'

class OffsetRowSqlGeneratorTest < ActiveSupport::TestCase
  def setup
    super
    @offset_row_migrator = InstanceMigrator::OffsetRowSqlGenerator.new("source", "target", "source_environment", "source_seed")
    @offset_row_migrator.load_models!
    @offset_row_migrator.init_domain!
    @offset_row_migrator.populate_domain!
  end

  def test_generate_join_table_for_common_tables
    output = @offset_row_migrator.generate_join_table_for_common_tables
    expected = "DROP TABLE IF EXISTS target.temp_common_join_table; CREATE TABLE target.temp_common_join_table (table_name VARCHAR(191), source_j_id INT, target_j_id INT);INSERT INTO target.temp_common_join_table (SELECT 'features', source_j.id, target_j.id FROM source.features source_j INNER JOIN target.features target_j ON source_j.name = target_j.name);DELETE FROM source.features WHERE id IN (SELECT source_j_id FROM target.temp_common_join_table WHERE table_name = 'features');INSERT INTO target.temp_common_join_table (SELECT 'features', id, id + @target_max_features_id FROM source.features);INSERT INTO target.temp_common_join_table (SELECT 'permissions', source_j.id, target_j.id FROM source.permissions source_j INNER JOIN target.permissions target_j ON source_j.name = target_j.name);DELETE FROM source.permissions WHERE id IN (SELECT source_j_id FROM target.temp_common_join_table WHERE table_name = 'permissions');INSERT INTO target.temp_common_join_table (SELECT 'permissions', id, id + @target_max_permissions_id FROM source.permissions);INSERT INTO target.temp_common_join_table (SELECT 'languages', source_j.id, target_j.id FROM source.languages source_j INNER JOIN target.languages target_j ON source_j.language_name = target_j.language_name);DELETE FROM source.languages WHERE id IN (SELECT source_j_id FROM target.temp_common_join_table WHERE table_name = 'languages');INSERT INTO target.temp_common_join_table (SELECT 'languages', id, id + @target_max_languages_id FROM source.languages);INSERT INTO target.temp_common_join_table (SELECT 'tags', source_j.id, target_j.id FROM source.tags source_j INNER JOIN target.tags target_j ON source_j.name = target_j.name);DELETE FROM source.tags WHERE id IN (SELECT source_j_id FROM target.temp_common_join_table WHERE table_name = 'tags');INSERT INTO target.temp_common_join_table (SELECT 'tags', id, id + @target_max_tags_id FROM source.tags);INSERT INTO target.temp_common_join_table (SELECT 'themes', source_j.id, target_j.id FROM source.themes source_j INNER JOIN target.themes target_j ON source_j.name = target_j.name WHERE source_j.program_id IS NULL AND target_j.program_id IS NULL);DELETE FROM source.themes WHERE id IN (SELECT source_j_id FROM target.temp_common_join_table WHERE table_name = 'themes');INSERT INTO target.temp_common_join_table (SELECT 'themes', id, id + @target_max_themes_id FROM source.themes);INSERT INTO target.temp_common_join_table (SELECT 'object_permissions', source_j.id, target_j.id FROM source.object_permissions source_j INNER JOIN target.object_permissions target_j ON source_j.name = target_j.name);DELETE FROM source.object_permissions WHERE id IN (SELECT source_j_id FROM target.temp_common_join_table WHERE table_name = 'object_permissions');INSERT INTO target.temp_common_join_table (SELECT 'object_permissions', id, id + @target_max_object_permissions_id FROM source.object_permissions);INSERT INTO target.temp_common_join_table (SELECT 'locations', source_j.id, target_j.id FROM source.locations source_j INNER JOIN target.locations target_j ON source_j.full_address = target_j.full_address);DELETE FROM source.locations WHERE id IN (SELECT source_j_id FROM target.temp_common_join_table WHERE table_name = 'locations');INSERT INTO target.temp_common_join_table (SELECT 'locations', id, id + @target_max_locations_id FROM source.locations);"
    assert_equal expected, output
  end

end